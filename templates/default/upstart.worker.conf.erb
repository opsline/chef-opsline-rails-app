description "<%= @app_name %> worker"

# See <%= @app_name %>.conf for how to manage all worker instances at once.
#
#   sudo start <%= @app_name %>-worker index=1
#   sudo stop <%= @app_name %>-worker index=1
#   sudo status <%= @app_name %>-worker index=1
#
# or use the service command:
#   sudo service <%= @app_name %>-worker {start,stop,restart,status} index=1
#

# no "start on", we don't want to automatically start
stop on (stopping <%= @app_name %> or runlevel [!234])

setuid <%= @user %>
setgid <%= @group %>

limit core unlimited unlimited
respawn
respawn limit 3 30

instance $index

env APP_DIR=<%= @deploy_to %>

script
exec /usr/bin/envdir $APP_DIR/env /bin/bash -l <<EOT
  cd $APP_DIR/current
  export WORKER_NAME="$(hostname -s).worker.${index}"
  echo $$ >$APP_DIR/shared/pids/<%= @app_name %>-${index}.pid
  exec bundle exec <%= @exec_command %> >>$APP_DIR/shared/log/upstart-${index}.log 2>&1
EOT
end script

post-stop script
  if [ -f $APP_DIR/shared/pids/<%= @app_name %>-${index}.pid ]; then
    kill $(cat $APP_DIR/shared/pids/<%= @app_name %>-${index}.pid) 2>/dev/null || true
    rm -f $APP_DIR/shared/pids/<%= @app_name %>-${index}.pid 2>/dev/null || true
  fi
end script
